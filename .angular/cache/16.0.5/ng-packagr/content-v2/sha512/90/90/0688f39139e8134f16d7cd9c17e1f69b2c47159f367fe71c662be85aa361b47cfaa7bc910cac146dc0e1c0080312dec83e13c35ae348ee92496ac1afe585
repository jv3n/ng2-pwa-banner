{"hash":"900fc863a71880cb33fe6f8a808fd50eabde9ea1","fesm2022":[{"exports":["BeforeInstallPrompt","NgxPwaInstallComponent","NgxPwaInstallModule"],"facadeModuleId":"C:\\dev\\workspace\\ngx-pwa-install\\dist\\ngx-pwa-install\\esm2022\\ngx-pwa-install.mjs","isDynamicEntry":false,"isEntry":true,"isImplicitEntry":false,"moduleIds":["C:\\dev\\workspace\\ngx-pwa-install\\dist\\ngx-pwa-install\\esm2022\\lib\\ngx-pwa-install.providers.mjs","C:\\dev\\workspace\\ngx-pwa-install\\dist\\ngx-pwa-install\\esm2022\\lib\\ngx-pwa-install.component.mjs","C:\\dev\\workspace\\ngx-pwa-install\\dist\\ngx-pwa-install\\esm2022\\lib\\ngx-pwa-install.module.mjs","C:\\dev\\workspace\\ngx-pwa-install\\dist\\ngx-pwa-install\\esm2022\\public-api.mjs","C:\\dev\\workspace\\ngx-pwa-install\\dist\\ngx-pwa-install\\esm2022\\ngx-pwa-install.mjs"],"name":"ngx-pwa-install","type":"chunk","dynamicImports":[],"fileName":"ngx-pwa-install.mjs","implicitlyLoadedBefore":[],"importedBindings":{"@angular/core":["InjectionToken","*","EventEmitter","Component","Inject","Output","APP_INITIALIZER","NgModule"],"@angular/common":["*","CommonModule"],"rxjs":["fromEvent","ReplaySubject","Subject","*"],"rxjs/operators":["tap","switchMap","mapTo","startWith","takeUntil"]},"imports":["@angular/core","@angular/common","rxjs","rxjs/operators"],"modules":{"C:\\dev\\workspace\\ngx-pwa-install\\dist\\ngx-pwa-install\\esm2022\\lib\\ngx-pwa-install.providers.mjs":{"code":"const beforeInstallPromptFactory = () => {\r\n    const event$ = fromEvent(window, 'beforeinstallprompt')\r\n        .pipe(tap(e => e.preventDefault()));\r\n    const beforeInstallPromptSubject = new ReplaySubject();\r\n    event$.subscribe(beforeInstallPromptSubject);\r\n    return beforeInstallPromptSubject;\r\n};\r\nconst BeforeInstallPrompt = new InjectionToken('BeforeInstallPrompt', {\r\n    providedIn: 'root',\r\n    factory: beforeInstallPromptFactory\r\n});","originalLength":2773,"removedExports":[],"renderedExports":["beforeInstallPromptFactory","BeforeInstallPrompt"],"renderedLength":449},"C:\\dev\\workspace\\ngx-pwa-install\\dist\\ngx-pwa-install\\esm2022\\lib\\ngx-pwa-install.component.mjs":{"code":"function NgxPwaInstallComponent_ng_container_0_ng_container_1_Template(rf, ctx) { if (rf & 1) {\r\n    i0.ɵɵelementContainerStart(0);\r\n    i0.ɵɵprojection(1);\r\n    i0.ɵɵelementContainerEnd();\r\n} }\r\nfunction NgxPwaInstallComponent_ng_container_0_Template(rf, ctx) { if (rf & 1) {\r\n    i0.ɵɵelementContainerStart(0);\r\n    i0.ɵɵtemplate(1, NgxPwaInstallComponent_ng_container_0_ng_container_1_Template, 2, 0, \"ng-container\", 0);\r\n    i0.ɵɵpipe(2, \"async\");\r\n    i0.ɵɵelementContainerEnd();\r\n} if (rf & 2) {\r\n    const ctx_r0 = i0.ɵɵnextContext();\r\n    i0.ɵɵadvance(1);\r\n    i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(2, 1, ctx_r0.choiceRequired));\r\n} }\r\nconst _c0 = [\"*\"];\r\nclass NgxPwaInstallComponent {\r\n    beforeInstallPrompt;\r\n    prompt = new EventEmitter();\r\n    beforeInstallPromptEvent;\r\n    choiceRequired = this.beforeInstallPrompt.pipe(switchMap(event => event.userChoice), mapTo(false), startWith(true));\r\n    destroy = new Subject();\r\n    constructor(beforeInstallPrompt) {\r\n        this.beforeInstallPrompt = beforeInstallPrompt;\r\n    }\r\n    ngOnInit() {\r\n        this.beforeInstallPrompt.pipe(takeUntil(this.destroy)).subscribe((event) => {\r\n            if (event) {\r\n                this.prompt.emit(event);\r\n            }\r\n            this.beforeInstallPromptEvent = event;\r\n        });\r\n    }\r\n    ngOnDestroy() {\r\n        this.destroy.next();\r\n        this.destroy.complete();\r\n        this.destroy = null;\r\n    }\r\n    async install() {\r\n        await this.beforeInstallPromptEvent.prompt();\r\n    }\r\n    static ɵfac = function NgxPwaInstallComponent_Factory(t) { return new (t || NgxPwaInstallComponent)(i0.ɵɵdirectiveInject(BeforeInstallPrompt)); };\r\n    static ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: NgxPwaInstallComponent, selectors: [[\"ngx-pwa-install\"]], outputs: { prompt: \"prompt\" }, ngContentSelectors: _c0, decls: 1, vars: 1, consts: [[4, \"ngIf\"]], template: function NgxPwaInstallComponent_Template(rf, ctx) { if (rf & 1) {\r\n            i0.ɵɵprojectionDef();\r\n            i0.ɵɵtemplate(0, NgxPwaInstallComponent_ng_container_0_Template, 3, 3, \"ng-container\", 0);\r\n        } if (rf & 2) {\r\n            i0.ɵɵproperty(\"ngIf\", ctx.beforeInstallPromptEvent);\r\n        } }, dependencies: [i1.NgIf, i1.AsyncPipe], encapsulation: 2 });\r\n}\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgxPwaInstallComponent, [{\r\n        type: Component,\r\n        args: [{\r\n                selector: 'ngx-pwa-install',\r\n                template: `\r\n    <ng-container *ngIf=\"beforeInstallPromptEvent\">\r\n      <ng-container *ngIf=\"choiceRequired|async\">\r\n        <ng-content></ng-content>\r\n      </ng-container>\r\n    </ng-container>\r\n  `\r\n            }]\r\n    }], function () { return [{ type: i2.Subject, decorators: [{\r\n                type: Inject,\r\n                args: [BeforeInstallPrompt]\r\n            }] }]; }, { prompt: [{\r\n            type: Output\r\n        }] }); })();","originalLength":7719,"removedExports":[],"renderedExports":["NgxPwaInstallComponent"],"renderedLength":2924},"C:\\dev\\workspace\\ngx-pwa-install\\dist\\ngx-pwa-install\\esm2022\\lib\\ngx-pwa-install.module.mjs":{"code":"function beforeInstallPromptInitializerFactory(beforeInstallPrompt) {\r\n    return () => Promise.resolve(beforeInstallPrompt);\r\n}\r\nclass NgxPwaInstallModule {\r\n    static forRoot() {\r\n        return {\r\n            ngModule: NgxPwaInstallModule,\r\n            providers: [\r\n                {\r\n                    provide: APP_INITIALIZER,\r\n                    useFactory: beforeInstallPromptInitializerFactory,\r\n                    deps: [BeforeInstallPrompt],\r\n                    multi: true\r\n                }\r\n            ]\r\n        };\r\n    }\r\n    static ɵfac = function NgxPwaInstallModule_Factory(t) { return new (t || NgxPwaInstallModule)(); };\r\n    static ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: NgxPwaInstallModule });\r\n    static ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({ imports: [CommonModule] });\r\n}\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgxPwaInstallModule, [{\r\n        type: NgModule,\r\n        args: [{\r\n                declarations: [NgxPwaInstallComponent],\r\n                imports: [\r\n                    CommonModule\r\n                ],\r\n                exports: [NgxPwaInstallComponent]\r\n            }]\r\n    }], null, null); })();\r\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(NgxPwaInstallModule, { declarations: [NgxPwaInstallComponent], imports: [CommonModule], exports: [NgxPwaInstallComponent] }); })();","originalLength":4349,"removedExports":[],"renderedExports":["beforeInstallPromptInitializerFactory","NgxPwaInstallModule"],"renderedLength":1429},"C:\\dev\\workspace\\ngx-pwa-install\\dist\\ngx-pwa-install\\esm2022\\public-api.mjs":{"code":"/*\r\n * Public API Surface of ngx-pwa-install\r\n */","originalLength":1109,"removedExports":[],"renderedExports":[],"renderedLength":49},"C:\\dev\\workspace\\ngx-pwa-install\\dist\\ngx-pwa-install\\esm2022\\ngx-pwa-install.mjs":{"code":"/**\r\n * Generated bundle index. Do not edit.\r\n */","originalLength":520,"removedExports":[],"renderedExports":[],"renderedLength":49}},"referencedFiles":[],"code":"import * as i0 from '@angular/core';\nimport { InjectionToken, EventEmitter, Component, Inject, Output, APP_INITIALIZER, NgModule } from '@angular/core';\nimport * as i1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i2 from 'rxjs';\nimport { fromEvent, ReplaySubject, Subject } from 'rxjs';\nimport { tap, switchMap, mapTo, startWith, takeUntil } from 'rxjs/operators';\n\nconst beforeInstallPromptFactory = () => {\r\n    const event$ = fromEvent(window, 'beforeinstallprompt')\r\n        .pipe(tap(e => e.preventDefault()));\r\n    const beforeInstallPromptSubject = new ReplaySubject();\r\n    event$.subscribe(beforeInstallPromptSubject);\r\n    return beforeInstallPromptSubject;\r\n};\r\nconst BeforeInstallPrompt = new InjectionToken('BeforeInstallPrompt', {\r\n    providedIn: 'root',\r\n    factory: beforeInstallPromptFactory\r\n});\n\nfunction NgxPwaInstallComponent_ng_container_0_ng_container_1_Template(rf, ctx) { if (rf & 1) {\r\n    i0.ɵɵelementContainerStart(0);\r\n    i0.ɵɵprojection(1);\r\n    i0.ɵɵelementContainerEnd();\r\n} }\r\nfunction NgxPwaInstallComponent_ng_container_0_Template(rf, ctx) { if (rf & 1) {\r\n    i0.ɵɵelementContainerStart(0);\r\n    i0.ɵɵtemplate(1, NgxPwaInstallComponent_ng_container_0_ng_container_1_Template, 2, 0, \"ng-container\", 0);\r\n    i0.ɵɵpipe(2, \"async\");\r\n    i0.ɵɵelementContainerEnd();\r\n} if (rf & 2) {\r\n    const ctx_r0 = i0.ɵɵnextContext();\r\n    i0.ɵɵadvance(1);\r\n    i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(2, 1, ctx_r0.choiceRequired));\r\n} }\r\nconst _c0 = [\"*\"];\r\nclass NgxPwaInstallComponent {\r\n    beforeInstallPrompt;\r\n    prompt = new EventEmitter();\r\n    beforeInstallPromptEvent;\r\n    choiceRequired = this.beforeInstallPrompt.pipe(switchMap(event => event.userChoice), mapTo(false), startWith(true));\r\n    destroy = new Subject();\r\n    constructor(beforeInstallPrompt) {\r\n        this.beforeInstallPrompt = beforeInstallPrompt;\r\n    }\r\n    ngOnInit() {\r\n        this.beforeInstallPrompt.pipe(takeUntil(this.destroy)).subscribe((event) => {\r\n            if (event) {\r\n                this.prompt.emit(event);\r\n            }\r\n            this.beforeInstallPromptEvent = event;\r\n        });\r\n    }\r\n    ngOnDestroy() {\r\n        this.destroy.next();\r\n        this.destroy.complete();\r\n        this.destroy = null;\r\n    }\r\n    async install() {\r\n        await this.beforeInstallPromptEvent.prompt();\r\n    }\r\n    static ɵfac = function NgxPwaInstallComponent_Factory(t) { return new (t || NgxPwaInstallComponent)(i0.ɵɵdirectiveInject(BeforeInstallPrompt)); };\r\n    static ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: NgxPwaInstallComponent, selectors: [[\"ngx-pwa-install\"]], outputs: { prompt: \"prompt\" }, ngContentSelectors: _c0, decls: 1, vars: 1, consts: [[4, \"ngIf\"]], template: function NgxPwaInstallComponent_Template(rf, ctx) { if (rf & 1) {\r\n            i0.ɵɵprojectionDef();\r\n            i0.ɵɵtemplate(0, NgxPwaInstallComponent_ng_container_0_Template, 3, 3, \"ng-container\", 0);\r\n        } if (rf & 2) {\r\n            i0.ɵɵproperty(\"ngIf\", ctx.beforeInstallPromptEvent);\r\n        } }, dependencies: [i1.NgIf, i1.AsyncPipe], encapsulation: 2 });\r\n}\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgxPwaInstallComponent, [{\r\n        type: Component,\r\n        args: [{\r\n                selector: 'ngx-pwa-install',\r\n                template: `\r\n    <ng-container *ngIf=\"beforeInstallPromptEvent\">\r\n      <ng-container *ngIf=\"choiceRequired|async\">\r\n        <ng-content></ng-content>\r\n      </ng-container>\r\n    </ng-container>\r\n  `\r\n            }]\r\n    }], function () { return [{ type: i2.Subject, decorators: [{\r\n                type: Inject,\r\n                args: [BeforeInstallPrompt]\r\n            }] }]; }, { prompt: [{\r\n            type: Output\r\n        }] }); })();\n\nfunction beforeInstallPromptInitializerFactory(beforeInstallPrompt) {\r\n    return () => Promise.resolve(beforeInstallPrompt);\r\n}\r\nclass NgxPwaInstallModule {\r\n    static forRoot() {\r\n        return {\r\n            ngModule: NgxPwaInstallModule,\r\n            providers: [\r\n                {\r\n                    provide: APP_INITIALIZER,\r\n                    useFactory: beforeInstallPromptInitializerFactory,\r\n                    deps: [BeforeInstallPrompt],\r\n                    multi: true\r\n                }\r\n            ]\r\n        };\r\n    }\r\n    static ɵfac = function NgxPwaInstallModule_Factory(t) { return new (t || NgxPwaInstallModule)(); };\r\n    static ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: NgxPwaInstallModule });\r\n    static ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({ imports: [CommonModule] });\r\n}\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgxPwaInstallModule, [{\r\n        type: NgModule,\r\n        args: [{\r\n                declarations: [NgxPwaInstallComponent],\r\n                imports: [\r\n                    CommonModule\r\n                ],\r\n                exports: [NgxPwaInstallComponent]\r\n            }]\r\n    }], null, null); })();\r\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(NgxPwaInstallModule, { declarations: [NgxPwaInstallComponent], imports: [CommonModule], exports: [NgxPwaInstallComponent] }); })();\n\n/*\r\n * Public API Surface of ngx-pwa-install\r\n */\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\nexport { BeforeInstallPrompt, NgxPwaInstallComponent, NgxPwaInstallModule };\n//# sourceMappingURL=ngx-pwa-install.mjs.map\n","map":null},{"fileName":"ngx-pwa-install.mjs.map","needsCodeReference":false,"source":"{\"version\":3,\"file\":\"ngx-pwa-install.mjs\",\"sources\":[\"../../../projects/ngx-pwa-install/src/lib/ngx-pwa-install.providers.ts\",\"../../../projects/ngx-pwa-install/src/lib/ngx-pwa-install.component.ts\",\"../../../projects/ngx-pwa-install/src/lib/ngx-pwa-install.module.ts\",\"../../../projects/ngx-pwa-install/src/public-api.ts\",\"../../../projects/ngx-pwa-install/src/ngx-pwa-install.ts\"],\"sourcesContent\":[\"import { InjectionToken } from '@angular/core';\\r\\nimport { fromEvent, ReplaySubject } from 'rxjs';\\r\\nimport { tap } from 'rxjs/operators';\\r\\nimport { BeforeInstallPromptEvent } from './before-install-prompt.event';\\r\\n\\r\\nexport const beforeInstallPromptFactory = () => {\\r\\n  const event$ = fromEvent<BeforeInstallPromptEvent>(window, 'beforeinstallprompt')\\r\\n    .pipe(\\r\\n      tap(e => e.preventDefault()),\\r\\n    );\\r\\n  const beforeInstallPromptSubject = new ReplaySubject<BeforeInstallPromptEvent>();\\r\\n  event$.subscribe(beforeInstallPromptSubject);\\r\\n  return beforeInstallPromptSubject;\\r\\n};\\r\\nexport const BeforeInstallPrompt = new InjectionToken<ReplaySubject<BeforeInstallPromptEvent>>(\\r\\n  'BeforeInstallPrompt',\\r\\n  {\\r\\n    providedIn: 'root',\\r\\n    factory: beforeInstallPromptFactory\\r\\n  }\\r\\n);\\r\\n\",\"import { Component, EventEmitter, Inject, OnDestroy, OnInit, Output } from '@angular/core';\\r\\nimport { Observable, Subject } from 'rxjs';\\r\\nimport { mapTo, startWith, switchMap, takeUntil } from 'rxjs/operators';\\r\\nimport { BeforeInstallPrompt } from './ngx-pwa-install.providers';\\r\\nimport { BeforeInstallPromptEvent } from './before-install-prompt.event';\\r\\n\\r\\n@Component({\\r\\n  selector: 'ngx-pwa-install',\\r\\n  template: `\\r\\n    <ng-container *ngIf=\\\"beforeInstallPromptEvent\\\">\\r\\n      <ng-container *ngIf=\\\"choiceRequired|async\\\">\\r\\n        <ng-content></ng-content>\\r\\n      </ng-container>\\r\\n    </ng-container>\\r\\n  `\\r\\n})\\r\\nexport class NgxPwaInstallComponent implements OnInit, OnDestroy {\\r\\n  @Output() prompt = new EventEmitter<BeforeInstallPromptEvent>();\\r\\n  public beforeInstallPromptEvent: BeforeInstallPromptEvent;\\r\\n  public readonly choiceRequired: Observable<boolean> = this.beforeInstallPrompt.pipe(\\r\\n    switchMap(event => event.userChoice),\\r\\n    mapTo(false),\\r\\n    startWith(true)\\r\\n  );\\r\\n  private destroy = new Subject();\\r\\n\\r\\n  constructor(\\r\\n    @Inject(BeforeInstallPrompt)\\r\\n    private readonly beforeInstallPrompt: Subject<any>\\r\\n  ) {\\r\\n  }\\r\\n\\r\\n  ngOnInit(): void {\\r\\n    this.beforeInstallPrompt.pipe(\\r\\n      takeUntil(this.destroy)\\r\\n    ).subscribe(\\r\\n      (event) => {\\r\\n        if (event) {\\r\\n          this.prompt.emit(event);\\r\\n        }\\r\\n        this.beforeInstallPromptEvent = event;\\r\\n      }\\r\\n    );\\r\\n  }\\r\\n\\r\\n  ngOnDestroy(): void {\\r\\n    this.destroy.next();\\r\\n    this.destroy.complete();\\r\\n    this.destroy = null;\\r\\n  }\\r\\n\\r\\n  async install() {\\r\\n    await this.beforeInstallPromptEvent.prompt();\\r\\n  }\\r\\n}\\r\\n\",\"import {APP_INITIALIZER, ModuleWithProviders, NgModule} from '@angular/core';\\r\\nimport {CommonModule} from '@angular/common';\\r\\nimport {NgxPwaInstallComponent} from './ngx-pwa-install.component';\\r\\nimport {BeforeInstallPrompt} from './ngx-pwa-install.providers';\\r\\n\\r\\nexport function beforeInstallPromptInitializerFactory(beforeInstallPrompt) {\\r\\n  return () => Promise.resolve(beforeInstallPrompt);\\r\\n}\\r\\n\\r\\n@NgModule({\\r\\n  declarations: [NgxPwaInstallComponent],\\r\\n  imports: [\\r\\n    CommonModule\\r\\n  ],\\r\\n  exports: [NgxPwaInstallComponent]\\r\\n})\\r\\nexport class NgxPwaInstallModule {\\r\\n  static forRoot(): ModuleWithProviders<NgxPwaInstallModule> {\\r\\n\\r\\n    return {\\r\\n      ngModule: NgxPwaInstallModule,\\r\\n      providers: [\\r\\n        {\\r\\n          provide: APP_INITIALIZER,\\r\\n          useFactory: beforeInstallPromptInitializerFactory,\\r\\n          deps: [BeforeInstallPrompt],\\r\\n          multi: true\\r\\n        }\\r\\n      ]\\r\\n    };\\r\\n  }\\r\\n}\\r\\n\",\"/*\\r\\n * Public API Surface of ngx-pwa-install\\r\\n */\\r\\n\\r\\nexport { NgxPwaInstallModule } from './lib/ngx-pwa-install.module';\\r\\nexport { NgxPwaInstallComponent } from './lib/ngx-pwa-install.component';\\r\\nexport { BeforeInstallPrompt } from './lib/ngx-pwa-install.providers';\\r\\n\",\"/**\\n * Generated bundle index. Do not edit.\\n */\\n\\nexport * from './public-api';\\n\"],\"names\":[],\"mappings\":\"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\"}","type":"asset"}]}